{"version":3,"sources":["components/general/Navigation.js","components/img/boxing.jpg","components/general/Inflation.js","components/general/Quote.js","components/general/MoneySupply.js","components/general/MoneySupplyST.js","components/general/Home.js","components/calculators/RetirementPlanner.js","components/auth/AuthForm.js","components/general/RetirePortfolio.js","components/calculators/RetirePlan.js","components/general/AllPortfolio.js","components/calculators/Efund.js","App.js","reportWebVitals.js","index.js"],"names":["Navigation","id","setAuth","user","setUser","useState","history","useHistory","Container","className","Navbar","expand","variant","Brand","href","Toggle","Collapse","NavDropdown","title","Item","Divider","Text","displayName","to","class","onClick","e","preventDefault","localStorage","clear","push","Inflation","props","infData","singstat","Level1","infDateArr","infValueArr","i","length","level_1","year","value","state","labels","datasets","label","fill","lineTension","backgroundColor","borderColor","borderWidth","data","hoverRadius","options","display","text","fontSize","legend","position","axisY","crosshair","enabled","snapToDataPoint","axisX","responsive","resizeDelay","elements","point","radius","Quote","MoneySupply","moneyData","moneysupply","Level2","slice","moneyArr","moneyDateArr","level_2","month","MoneySupplySt","Home","quotes","sexyQuote","setSexyQuote","getSexy","Math","floor","random","useEffect","Row","Col","RetirementPlanner","Register","auth","isSignup","setIsSignup","firstName","lastName","email","password","confirmPassword","formData","setFormData","handleChange","target","name","registerSubmit","a","console","log","axios","post","res","token","setItem","alert","loginSubmit","Form","onSubmit","type","placeholder","onChange","required","Button","prevIsSignup","RetirePortfolio","retirePlan","setRetirePlan","entryYear","setEntryYear","entryMonth","setEntryMonth","retirementPlan","get","_id","entryDate","split","delete","showRetire","retireExpense","disabled","retireAge","retireFunds","annualSavings","infAdjRetireFunds","infAdjAnnualSavings","RetirePlan","startFund","startAge","lifeExp","expReturns","retireForm","setRetireForm","drawdownPeriod","setDrawdownPeriod","startInfYear","setStartInfYear","endInfYear","setEndInfYear","startInfValue","setStartInfValue","endInfValue","setEndInfValue","cumInflation","setCumInflation","annualInflation","setAnnualInflation","realReturns","setRealReturns","show","setShow","accPeriod","enterRetirePlan","vRetireFund","toFixed","vRetireSaving","infRetireFund","fvStartFund","infRetireSavings","savePlan","currentFund","currentAge","accumulationPeriod","lifeExpectancy","investReturn","Date","userId","cumulativeInflation","min","AllPortfolio","Efund","inputList","setInputList","curEfund","liqAsset","curDebt","fixExpense","mthIncome","stopIncome","efundForm","setEfundForm","handleAdd","ccBill","calcEfund","creditBill","setCreditBill","liqFund","setLiqFund","shortTermDebt","setShortTermDebt","burnRate","setBurnRate","cashBudget","setCashBudget","budget","setBudget","Number","reduce","b","map","ele","idx","index","list","handleCardsChange","splice","handleRemove","md","onClickCapture","App","headers","authorization","removeItem","setUserStatus","path","exact","AuthForm","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oSAkEeA,MA9Df,YAAiD,EAA5BC,GAA6B,IAAzBC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,KAAMC,EAAS,EAATA,QACpC,EAA4BC,mBAAS,IAArC,mBACIC,GADJ,UACcC,eA2Bd,OACI,cAACC,EAAA,EAAD,CAAWC,UAAU,GAArB,SACQ,eAACC,EAAA,EAAD,CAAQC,OAAO,KAAKV,GAAG,aAAaW,QAAQ,QAAQH,UAAU,YAA9D,UACI,cAACC,EAAA,EAAOG,MAAR,CAAcJ,UAAU,QAASK,KAAK,IAAtC,4BACA,cAACJ,EAAA,EAAOK,OAAR,CAAe,gBAAc,0BAC7B,eAACL,EAAA,EAAOM,SAAR,CAAiBf,GAAG,wBAAwBQ,UAAU,GAAtD,UACA,eAACQ,EAAA,EAAD,CAAaR,UAAU,aAAaS,MAAM,cAAcjB,GAAG,0BAA3D,UACI,cAACgB,EAAA,EAAYE,KAAb,CAAkBL,KAAK,SAAvB,qCACA,cAACG,EAAA,EAAYE,KAAb,CAAkBL,KAAK,UAAvB,iCACA,cAACG,EAAA,EAAYE,KAAb,CAAkBL,KAAK,IAAvB,gCACA,cAACG,EAAA,EAAYE,KAAb,CAAkBL,KAAK,IAAvB,6BACA,cAACG,EAAA,EAAYG,QAAb,IACA,cAACH,EAAA,EAAYE,KAAb,CAAkBL,KAAK,SAEjBX,EACF,sBAAKM,UAAU,0DAAf,UACI,cAACC,EAAA,EAAOW,KAAR,yBACA,eAACJ,EAAA,EAAD,CAAaC,MAAOf,EAAKmB,YAAarB,GAAG,qBAAqBQ,UAAU,eAAxE,UACI,cAAC,IAAD,CAASc,GAAG,aAAaC,MAAM,gBAA/B,qBAEA,cAACP,EAAA,EAAYE,KAAb,CAAkBM,QA5BnC,SAACC,GACZA,EAAEC,iBACFC,aAAaC,QACb3B,GAAQ,GACRI,EAAQwB,KAAK,KACb1B,EAAQ,OAuBoB,0BAKR,cAAC,IAAD,CAASmB,GAAG,QAAQd,UAAU,gDAA9B,uC,qBC1Db,I,sBC0FAsB,MApFf,SAAmBC,GAMf,IALA,IAAIC,EAAUC,EAAiBC,OAC3BC,EAAa,GACbC,EAAc,GAGTC,EAAI,EAAGA,EAAIL,EAAQM,OAASD,IACP,cAAvBL,EAAQK,GAAGE,SACVJ,EAAWN,KAAKG,EAAQK,GAAGG,MAKnC,IAAK,IAAIH,EAAI,EAAGA,EAAIL,EAAQM,OAAQD,IACN,cAAvBL,EAAQK,GAAGE,SACVH,EAAYP,KAAKG,EAAQK,GAAGI,OAKpC,IAAMC,EAAQ,CACNC,OAAQR,EACZS,SAAU,CACN,CACIC,MAAO,6BACPC,MAAM,EACNC,YAAa,GACbC,gBAAiB,yBACjBC,YAAa,gBACbC,YAAa,GACbC,KAAMf,EACNgB,YAAa,KAazB,OACI,8BACI,cAAC,IAAD,CACID,KAAMT,EACNW,QAAS,CACLpC,MAAM,CACFqC,SAAQ,EACRC,KAAK,iCACLC,SAAS,IAEbC,OAAO,CACHH,SAAQ,EACRI,SAAS,SAEbC,MAAM,CACFC,UAAW,CACPC,SAAS,EACTC,iBAAiB,IAGzBC,MAAO,CACHH,UAAW,CACPC,SAAS,EACTC,iBAAiB,IAGzBE,YAAY,EACZC,YAAa,GACbC,SAAS,CACLC,MAAM,CACFC,OAAO,YCpDpBC,I,QCgDAC,MAvEf,SAAqBvC,GAKjB,IAJA,IACIwC,EAAYC,EAAoBC,OAAOC,MAAM,KAC7CC,EAAW,GACXC,EAAe,GACXvC,EAAI,EAAGA,EAAIkC,EAAUjC,OAAQD,IACL,OAAzBkC,EAAUlC,GAAGwC,UACZF,EAAS9C,KAAK0C,EAAUlC,GAAGyC,OAC3BF,EAAa/C,KAAK0C,EAAUlC,GAAGI,QAOvC,IAAMC,EAAQ,CACVC,OAAQgC,EACR/B,SAAU,CACN,CACIC,MAAO,8BACPC,MAAM,EACNC,YAAa,GACbC,gBAAiB,uBACjBC,YAAa,gBACbC,YAAa,GACbC,KAAMyB,EACNxB,YAAa,KAKzB,OACI,8BACI,cAAC,IAAD,CACID,KAAMT,EACNW,QAAS,CACLpC,MAAM,CACFqC,SAAQ,EACRC,KAAK,iCACLC,SAAS,IAEbC,OAAO,CACHH,SAAQ,EACRI,SAAS,SAEbC,MAAM,CACFC,UAAW,CACPC,SAAS,EACTC,iBAAiB,IAGzBC,MAAO,CACHH,UAAW,CACPC,SAAS,EACTC,iBAAiB,IAGzBE,YAAY,EACZC,YAAa,GACbC,SAAS,CACLC,MAAM,CACFC,OAAO,WCUpBW,MAxEf,SAAuBhD,GAMnB,IAJA,IACIwC,EAAYC,EAAoBC,OAAOC,MAAM,KAC7CC,EAAW,GACXC,EAAe,GACXvC,EAAI,EAAGA,EAAIkC,EAAUjC,OAAQD,IACL,OAAzBkC,EAAUlC,GAAGwC,UACZF,EAAS9C,KAAK0C,EAAUlC,GAAGyC,OAC3BF,EAAa/C,KAAK0C,EAAUlC,GAAGI,QAOvC,IAAMC,EAAQ,CACVC,OAAQgC,EACR/B,SAAU,CACN,CACIC,MAAO,8BACPC,MAAM,EACNC,YAAa,GACbC,gBAAiB,mBACjBC,YAAa,gBACbC,YAAa,GACbC,KAAMyB,EACNxB,YAAa,KAKzB,OACI,8BACI,cAAC,IAAD,CACID,KAAMT,EACNW,QAAS,CACLpC,MAAM,CACFqC,SAAQ,EACRC,KAAK,iCACLC,SAAS,IAEbC,OAAO,CACHH,SAAQ,EACRI,SAAS,SAEbC,MAAM,CACFC,UAAW,CACPC,SAAS,EACTC,iBAAiB,IAGzBC,MAAO,CACHH,UAAW,CACPC,SAAS,EACTC,iBAAiB,IAGzBE,YAAY,EACZC,YAAa,GACbC,SAAS,CACLC,MAAM,CACFC,OAAO,UCDpBY,MAvDf,WAEI,IAAIC,EAAS,CAAC,yJACV,uJAEA,yBACA,sIAEA,oLAEA,4DAIJ,EAAkC7E,mBAAS,IAA3C,mBAAO8E,EAAP,KAAkBC,EAAlB,KACA,SAASC,IACLD,EAAaF,EAAOI,KAAKC,MAAMD,KAAKE,SAAWN,EAAO3C,UAO1D,OAJAkD,qBAAU,WACNJ,MACF,IAGE,cAAC7E,EAAA,EAAD,CAAWC,UAAU,cAArB,SACI,eAACiF,EAAA,EAAD,CAAKjF,UAAU,GAAf,UACI,eAACkF,EAAA,EAAD,CAAKlF,UAAU,wCAAf,UACI,oBAAIR,GAAG,QAAP,4BAGA,oBAAIA,GAAG,WAAP,4CAGA,oBAAIA,GAAG,YAAYQ,UAAU,+CAA+CgB,QAAS4D,EAArF,SACKF,OAGT,cAACQ,EAAA,EAAD,CAAKlF,UAAU,iBAAf,SACI,cAAC,EAAD,MAEJ,eAACkF,EAAA,EAAD,CAAKlF,UAAU,gBAAf,UACI,cAAC,EAAD,IAEA,cAAC,EAAD,OAEJ,cAACkF,EAAA,EAAD,CAAKlF,UAAU,uC,yBCkMhBmF,I,0BCnIAC,MA/Gf,YAAyC,EAAtBC,KAAuB,IAAjB5F,EAAgB,EAAhBA,QAErB,GAFqC,EAAPC,KAEEE,oBAAS,IAAzC,mBAAO0F,EAAP,KAAiBC,EAAjB,KAMA,EAAgC3F,mBADX,CAAE4F,UAAW,GAAIC,SAAU,GAAIC,MAAO,GAAIC,SAAU,GAAIC,gBAAiB,KAC9F,mBAAOC,EAAP,KAAiBC,EAAjB,KACMjG,EAAUC,cAEViG,EAAe,SAAC9E,GAClB6E,EAAY,2BAAID,GAAL,kBAAgB5E,EAAE+E,OAAOC,KAAOhF,EAAE+E,OAAO/D,UAGlDiE,EAAc,uCAAG,WAAMjF,GAAN,eAAAkF,EAAA,6DACnBlF,EAAEC,iBADiB,SAGfkF,QAAQC,IAAI,aAHG,SAICC,IAAMC,KAAK,qBAAsBV,GAJlC,OAIXW,EAJW,OAKfJ,QAAQC,IAAIG,GACZJ,QAAQC,IAAIG,EAAI7D,KAAK8D,OACrBtF,aAAauF,QAAQ,QAASF,EAAI7D,KAAK8D,OACvChH,GAAQ,GACRI,EAAQwB,KAAK,KATE,kDAWf+E,QAAQC,IAAR,6BACAM,MAAM,EAAD,IAZU,0DAAH,sDAgBdC,EAAW,uCAAG,WAAM3F,GAAN,eAAAkF,EAAA,6DAChBlF,EAAEC,iBADc,kBAGIoF,IAAMC,KAAK,kBAAmBV,GAHlC,OAGRW,EAHQ,OAIZJ,QAAQC,IAAIG,EAAI7D,KAAK8D,OACrBtF,aAAauF,QAAQ,QAASF,EAAI7D,KAAK8D,OACvChH,GAAQ,GACRI,EAAQwB,KAAK,KAPD,kDASZ+E,QAAQC,IAAR,MACAM,MAAM,EAAD,IAVO,0DAAH,sDAejB,OACI,eAAC1B,EAAA,EAAD,CAAKjF,UAAU,mCAAf,UACI,cAACkF,EAAA,EAAD,CAAKlF,UAAU,4BAAf,SAA2C,6BAAKsF,EAAW,WAAa,aACxE,cAACJ,EAAA,EAAD,CAAKlF,UAAU,qDAAf,SACI,cAACiF,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAKlF,UAAU,oBAAf,SACI,eAAC6G,EAAA,EAAD,CAAMC,SAAUxB,EAAWY,EAAiBU,EAA5C,UACMtB,GACE,eAACL,EAAA,EAAD,CAAKjF,UAAU,0BAAf,UACI,cAACkF,EAAA,EAAD,CAAKlF,UAAU,6BAAf,SACI,mDACJ,cAACkF,EAAA,EAAD,CAAKlF,UAAU,kBAAf,SAGI,uBAAO+G,KAAK,OAAOC,YAAY,eAAef,KAAK,cAAcgB,SAAUlB,EAAcmB,UAAQ,SAK7G,eAACjC,EAAA,EAAD,CAAKjF,UAAU,0BAAf,UACI,cAACkF,EAAA,EAAD,CAAKlF,UAAU,6BAAf,SACI,4CACJ,cAACkF,EAAA,EAAD,CAAKlF,UAAU,kBAAf,SACI,uBAAO+G,KAAK,QAAQC,YAAY,gBAAgBf,KAAK,QAAQgB,SAAUlB,EAAcmB,UAAQ,SAGrG,eAACjC,EAAA,EAAD,CAAKjF,UAAU,0BAAf,UACI,cAACkF,EAAA,EAAD,CAAKlF,UAAU,6BAAf,SACI,+CACJ,cAACkF,EAAA,EAAD,CAAKlF,UAAU,kBAAf,SACI,uBAAOgH,YAAY,WAAWf,KAAK,WAAWgB,SAAUlB,EAAcgB,KAAK,WAAWG,UAAQ,SAGrG5B,GACD,eAACL,EAAA,EAAD,CAAKjF,UAAU,+BAAf,UACI,cAACkF,EAAA,EAAD,CAAKlF,UAAU,6BAAf,SACI,uDACJ,cAACkF,EAAA,EAAD,CAAKlF,UAAU,kBAAf,SACI,uBAAOA,UAAU,kBAAkBgH,YAAY,mBAAmBf,KAAK,kBAAkBgB,SAAUlB,EAAcgB,KAAK,WAAWG,UAAQ,SAIjJ,cAACjC,EAAA,EAAD,CAAKjF,UAAU,wBAAf,SACI,cAACkF,EAAA,EAAD,CAAKlF,UAAU,SAAf,SACI,cAACmH,EAAA,EAAD,CAAQJ,KAAK,SAAS5G,QAAQ,UAA9B,SACKmF,EAAW,UAAY,gBAIpC,cAACL,EAAA,EAAD,CAAKjF,UAAU,cAAf,SACI,cAACkF,EAAA,EAAD,CAAKlF,UAAU,UAAf,SACI,mBAAGgB,QA9FhB,WACfuE,GAAY,SAAC6B,GAAD,OAAmBA,MA6FH,SACK9B,EAAW,mCAAqC,oD,OCpB1E+B,MA/Ef,YAAkC,IAAR3H,EAAO,EAAPA,KACtB,EAAmCE,mBAAS,IAA5C,mBAAM0H,EAAN,KAAkBC,EAAlB,KACA,EAAiC3H,mBAAS,IAA1C,mBAAM4H,EAAN,KAAiBC,EAAjB,KACA,EAAmC7H,mBAAS,IAA5C,mBAAM8H,EAAN,KAAkBC,EAAlB,KACAvB,QAAQC,IAAI3G,EAAKkI,gBACjB,IAAI/H,EAAUC,cALe,4CAc7B,8BAAAqG,EAAA,6DACIC,QAAQC,IAAI,cADhB,kBAGwBC,IAAMuB,IAAN,sBAAyBnI,EAAKkI,eAAeE,MAHrE,OAGYtB,EAHZ,OAIQe,EAAcf,EAAI7D,KAAK2E,YACnBS,EAAYvB,EAAI7D,KAAK2E,WAAWS,UAAUC,MAAM,KACpD5B,QAAQC,IAAI0B,GAEZN,EAAaM,EAAU,IAEvBJ,EAAcI,EAAU,IAVhC,kDAYQ3B,QAAQC,IAAR,MAZR,2DAd6B,kEA6B7B,WAA0BpF,GAA1B,SAAAkF,EAAA,6DACIlF,EAAEC,iBADN,SAGQkF,QAAQC,IAAI,mBAHpB,SAIcC,IAAM2B,OAAN,2BAAiCvI,EAAKoI,MAJpD,uBAKcxB,IAAM2B,OAAN,6BAAmCvI,EAAKkI,eAAeE,MALrE,OAMQ1B,QAAQC,IAAI3G,EAAKkI,eAAeE,KAEhC1B,QAAQC,IAAR,kBAAuB3G,EAAKkI,iBAC5BjB,MAAM,gBACN9G,EAAQwB,KAAK,KAVrB,kDAYQ+E,QAAQC,IAAR,MAZR,2DA7B6B,sBAuD7B,OAjDArB,qBAAW,WACoB,OAAxBtF,EAAKkI,eACJ/H,EAAQwB,KAAK,KACP3B,EAAKkI,gBATU,mCAUrBM,KAEN,CAACxI,IA0CH0G,QAAQC,IAAIiB,GAER,eAACrC,EAAA,EAAD,CAAKjF,UAAU,aAAf,UACI,oBAAIA,UAAU,+BAAd,wBACA,oBAAGA,UAAU,2BAAb,yBAAqD0H,EAArD,IAAkEF,KAClE,cAACtC,EAAA,EAAD,CAAKlF,UAAU,yCAAf,iCACI,uBAAOA,UAAU,iCAAiCiG,KAAK,GAAGc,KAAK,SAASC,YAAaM,EAAWa,cAAeC,UAAU,IAC7H,cAAClD,EAAA,EAAD,CAAKlF,UAAU,yCAAf,6BACI,uBAAOA,UAAU,gCAAgCiG,KAAK,YAAYc,KAAK,SAASC,YAAaM,EAAWe,UAAWD,UAAU,IACjI,cAAClD,EAAA,EAAD,CAAKlF,UAAU,0CAAf,qBACA,cAACkF,EAAA,EAAD,CAAKlF,UAAU,yCAAf,kCACI,uBAAOA,UAAU,gCAAgCiG,KAAK,UAAUc,KAAK,SAASC,YAAaM,EAAWgB,YAAaF,UAAU,IACjI,cAAClD,EAAA,EAAD,CAAKlF,UAAU,0CAAf,gCACI,uBAAOA,UAAU,gCAAiCiG,KAAK,aAAac,KAAK,SAASC,YAAaM,EAAWiB,cAAeH,UAAU,IACvI,cAAClD,EAAA,EAAD,CAAKlF,UAAU,0CAAf,gCACA,cAACkF,EAAA,EAAD,CAAKlF,UAAU,yCAAf,kCACI,uBAAOA,UAAU,gCAAgCiG,KAAK,UAAUc,KAAK,SAASC,YAAaM,EAAWkB,kBAAmBJ,UAAU,IACvI,cAAClD,EAAA,EAAD,CAAKlF,UAAU,0CAAf,gCACI,uBAAOA,UAAU,gCAAiCiG,KAAK,aAAac,KAAK,SAASC,YAAaM,EAAWmB,oBAAqBL,UAAU,IAC7I,cAAClD,EAAA,EAAD,CAAKlF,UAAU,oBACf,wBAAQA,UAAU,kCAAkCgB,QA1E/B,4CA0ErB,6BC6HG0H,MAvMf,YAA6B,IAARhJ,EAAO,EAAPA,KACbG,EAAUC,cAGd,EAAoCF,mBADf,CAAE+I,UAAW,EAAGR,cAAe,EAAGE,UAAW,EAAGO,SAAU,EAAGC,QAAS,EAAGC,WAAY,MAC1G,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,SAASjD,EAAa9E,GAClB+H,EAAc,2BAAID,GAAL,kBAAkB9H,EAAE+E,OAAOC,KAAQhF,EAAE+E,OAAO/D,SAe7D,IAZA,MAA4CrC,mBAAS,GAArD,mBAAOqJ,EAAP,KAAuBC,EAAvB,KACA,EAAwCtJ,mBAAS,GAAjD,mBAAOuJ,EAAP,KAAqBC,EAArB,KACA,EAAoCxJ,mBAAS,GAA7C,mBAAOyJ,EAAP,KAAmBC,EAAnB,KACA,EAA0C1J,mBAAS,GAAnD,mBAAO2J,EAAP,KAAsBC,EAAtB,KACA,EAAsC5J,mBAAS,GAA/C,mBAAO6J,EAAP,KAAoBC,EAApB,KACA,EAAwC9J,mBAAS,GAAjD,mBAAO+J,EAAP,KAAqBC,EAArB,KACA,EAA8ChK,mBAAS,GAAvD,mBAAOiK,EAAP,KAAwBC,EAAxB,KACA,EAAsClK,mBAAS,GAA/C,mBAAOmK,EAAP,KAAoBC,EAApB,KACA,EAAwBpK,oBAAS,GAAjC,oBAAOqK,GAAP,MAAaC,GAAb,MAEIvH,GAAOlB,EAAiBC,OACxBF,GAAU,GACNK,GAAI,EAAGA,GAAIc,GAAKb,OAAQD,KACL,cAApBc,GAAKd,IAAGE,UACPP,GAAQK,GAAE,GAAK,CACXG,KAAMW,GAAKd,IAAGG,KACdC,MAAOU,GAAKd,IAAGI,QAI3B,IAAIkI,GAAY,EA7BQ,SAyCTC,GAzCS,iFAyCxB,WAA+BnJ,GAA/B,qBAAAkF,EAAA,6DACI+C,EAAkBH,EAAWF,QAAUE,EAAWV,WAClDiB,EAAa,UAAC9H,GAAQA,GAAQM,OAAO,UAAxB,aAAC,EAA2BE,MACzCoH,EAAe,UAAC5H,GAAQA,GAAQM,OAASqI,WAA1B,aAAC,EAAqCnI,MACrD0H,EAAc,UAAClI,GAAQA,GAAQM,OAAO,UAAxB,aAAC,EAA2BG,OAC1CuH,EAAgB,UAAChI,GAAQA,GAAQM,OAASqI,WAA1B,aAAC,EAAqClI,OAL1D,SAMU2H,IAAmBL,EAAgBE,GAAeF,EAAe,KAN3E,uBAOUO,EAAkE,KAA9C,SAACL,EAAYF,EAAiB,EAAEY,IAAW,IAPzE,wBAQUH,GAAgBjB,EAAWD,WAAae,GAAiB,KARnE,6CAzCwB,sBA+BpBM,GADDA,GAAYxH,GAAKA,GAAKb,OAAO,GAAGE,KAAOW,GAAK,GAAGX,KACjCW,GAAKA,GAAKb,OAAO,GAAGE,KAAOW,GAAK,GAAGX,KAC3CmI,GAAY,EACL,EAEApB,EAAWV,UAAYU,EAAWH,SAElD5D,qBAAU,WACNoF,OACF,CAACrB,IAYH,IAAIsB,IAAetB,EAAWZ,cAAgBc,GAAgBqB,QAAQ,GAClEC,KAAmBxB,EAAWZ,cAAgBc,EAAiBF,EAAWJ,WAAawB,IAAWG,QAAQ,GAE1GE,IAAiBzB,EAAWZ,gBAAiB,EAAE,KAAF,IAAG,EAAE4B,GAAgBd,IAAiBc,IAAe,EAAEA,IAAcO,QAAQ,GAC1HG,GAAe1B,EAAWJ,UAAX,SAAuB,EAAEoB,EAAcI,IAEtDO,KADoBF,GAAcC,KACK,EAAEV,KAAmB,SAAE,EAAEA,EAAcI,IAAY,GAAGJ,IAAeO,QAAQ,GAzDhG,SAsFTK,GAtFS,iFAsFxB,WAAwB1J,GAAxB,SAAAkF,EAAA,6DACIC,QAAQC,IAAI,OACZpF,EAAEC,iBAFN,SAIQkF,QAAQC,IAAI,QAJpB,SAKcC,IAAMC,KAAK,mBAAoB,CACjCqE,YAAa7B,EAAWJ,UACxBR,cAAeY,EAAWZ,cAC1B0C,WAAY9B,EAAWH,SACvBP,UAAWU,EAAWV,UACtByC,mBAAoBX,GACpBY,eAAgBhC,EAAWF,QAC3BmC,aAAcjC,EAAWD,WACzBR,YAAa+B,GACb9B,cAAegC,GACf/B,kBAAmBgC,GACnB/B,oBAAqBiC,GACrB3C,UAAW,IAAIkD,KACfC,OAAQxL,EAAKoI,IACb+B,gBAAiBA,EACjBsB,oBAAqBxB,IApBjC,OAsBQvD,QAAQC,IAAI,cACZM,MAAM,eACN9G,EAAQwB,KAAK,KAxBrB,kDA0BQsF,MAAM,kEACNP,QAAQC,IAAR,MA3BR,2DAtFwB,sBAqHxB,OAjCAD,QAAQC,IAAIqE,IACZtE,QAAQC,IAAImE,IAiCR,eAACvF,EAAA,EAAD,WACI,oBAAIjF,UAAU,sCAAd,gCACA,cAACkF,EAAA,EAAD,CAAKlF,UAAU,GAAf,SACI,eAACiF,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAKlF,UAAU,yCAAf,sCACI,uBAAOA,UAAU,iCAAkCiG,KAAK,YAAYc,KAAK,SAASC,YAAY,uCAAuCoE,IAAI,IAAInE,SAAUlB,IAC3J,cAACb,EAAA,EAAD,CAAKlF,UAAU,yCAAf,iCACI,uBAAOA,UAAU,gCAAgCiG,KAAK,gBAAgBc,KAAK,SAASC,YAAY,0CAA0CoE,IAAI,IAAInE,SAAUlB,IAChK,cAACb,EAAA,EAAD,CAAKlF,UAAU,yCAAf,0BACI,uBAAOA,UAAU,gCAAgCiG,KAAK,WAAWc,KAAK,SAASC,YAAY,oBAAoBoE,IAAI,IAAInE,SAAUlB,IACrI,cAACb,EAAA,EAAD,CAAKlF,UAAU,yCAAf,6BACI,uBAAOA,UAAU,gCAAgCiG,KAAK,YAAYc,KAAK,SAASC,YAAY,gCAAgCoE,IAAI,IAAInE,SAAUlB,IAClJ,cAACb,EAAA,EAAD,CAAKlF,UAAU,yCAAf,8BACI,uBAAOA,UAAU,gCAAgCiG,KAAK,UAAUc,KAAK,SAASC,YAAY,wCAAwCoE,IAAI,IAAInE,SAAUlB,IACxJ,cAACb,EAAA,EAAD,CAAKlF,UAAU,0CAAf,mCACI,uBAAOA,UAAU,gCAAiCiG,KAAK,aAAac,KAAK,SAASC,YAAY,4CAA4CoE,IAAI,IAAInE,SAAUlB,IAChK,cAACb,EAAA,EAAD,CAAKlF,UAAU,oBAEP,cAACmH,EAAA,EAAD,CAAQnH,UAAU,6BAA6BgB,QA1EvE,WACIoJ,KAHAF,IAAQ,IA4EY,8BAMfD,GACG,cAAC/E,EAAA,EAAD,CAAKlF,UAAU,iBAAf,SACI,cAACiF,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,CAAKlF,UAAU,+BAAf,UACI,cAACkF,EAAA,EAAD,CAAKlF,UAAU,eAAf,6BACA,eAACiF,EAAA,EAAD,CAAKjF,UAAU,iCAAf,UACI,eAACkF,EAAA,EAAD,CAAKlF,UAAU,mDAAf,sCACI,uBAAOA,UAAU,+CAA+CiG,KAAK,GAAGc,KAAK,SAASC,YAAaqD,GAAajC,UAAU,OAE9H,eAAClD,EAAA,EAAD,CAAKlF,UAAU,mDAAf,qCACI,uBAAOA,UAAU,8CAA8CiG,KAAK,GAAGc,KAAK,SAASC,YAAauD,GAAenC,UAAU,UAGnI,cAAClD,EAAA,EAAD,CAAKlF,UAAU,oBAAf,wCACA,eAACiF,EAAA,EAAD,CAAKjF,UAAU,iCAAf,UACI,eAACkF,EAAA,EAAD,CAAKlF,UAAU,mDAAf,sCACI,uBAAOA,UAAU,+CAA+CiG,KAAK,GAAGc,KAAK,SAASC,YAAawD,GAAepC,UAAU,OAEhI,eAAClD,EAAA,EAAD,CAAKlF,UAAU,kDAAf,qCACI,uBAAOA,UAAU,8CAA8CiG,KAAK,GAAGc,KAAK,SAASC,YAAa0D,GAAkBtC,UAAU,UAGrI1I,EACG,cAACyH,EAAA,EAAD,CAAQnH,UAAU,gCAAgCgB,QAAS2J,GAAU7D,SAAU6D,GAA/E,kCAGA,oCAMhB,6BAIHV,GACG,eAAChF,EAAA,EAAD,CAAKjF,UAAU,oCAAf,UACI,oBAAIA,UAAU,qBAAd,sBACA,sBAAKA,UAAU,kBAAf,UACA,oBAAGA,UAAU,OAAb,6CAAoD,8BAAImK,GAAJ,YAApD,iCACA,oBAAGnK,UAAU,OAAb,2BAAmCmK,GAAnC,gBAA2DhB,EAA3D,OAA6EE,EAA7E,6BACQ,8BAAIM,EAAaW,QAAQ,GAAzB,OADR,SAC+C,8BAAIT,EAAgBS,QAAQ,GAA5B,OAD/C,wBAEI,oBAAGtK,UAAU,OAAb,gEAAuE,+BAAiB,IAAZ+J,GAAiBO,QAAQ,GAA9B,OAAvE,qEAA+K,8BAAIvB,EAAWD,WAAf,OAA/K,QACJ,mBAAG9I,UAAU,kBAAb,2NAKJ,iCC1LDqL,MARf,YAA+B,IAAR3L,EAAO,EAAPA,KACnB,OAEI,cAAC,EAAD,CAAiBA,KAAMA,K,eCoHhB4L,MArHf,YAAwB,IAAR5L,EAAO,EAAPA,KACZ,EAAwBE,oBAAS,GAAjC,mBAAOqK,EAAP,KAAaC,EAAb,KACA,EAAiCtK,mBAAS,CAAC,CAAE,OAAU,KAAvD,mBAAM2L,EAAN,KAAiBC,EAAjB,KAEA,EAAiC5L,mBADZ,CAAE6L,SAAU,EAAGC,SAAS,EAAGC,QAAQ,EAAGC,WAAW,EAAGC,UAAU,EAAGC,WAAW,IACjG,mBAAMC,EAAN,KAAiBC,EAAjB,KAEA,SAASjG,EAAa9E,GAClB+K,EAAa,2BAAID,GAAL,kBAAiB9K,EAAE+E,OAAOC,KAAQhF,EAAE+E,OAAO/D,SAW3D,SAASgK,IACLT,EAAa,GAAD,mBAAKD,GAAL,CAAgB,CAACW,OAAQ,MAWzClH,qBAAU,WACNmH,MACF,CAACJ,IAEH,IAAIG,EAAS,GACb,EAAoCtM,mBAAS,GAA7C,mBAAOwM,EAAP,KAAmBC,EAAnB,KACA,EAA8BzM,mBAAS,GAAvC,mBAAO0M,EAAP,KAAgBC,EAAhB,KACA,EAA0C3M,mBAAS,GAAnD,mBAAO4M,EAAP,KAAsBC,EAAtB,KACA,EAAgC7M,mBAAS,GAAzC,mBAAO8M,EAAP,KAAiBC,EAAjB,KACA,EAAoC/M,mBAAS,GAA7C,mBAAOgN,EAAP,KAAmBC,EAAnB,KACA,EAA4BjN,mBAAS,GAArC,mBAAOkN,EAAP,KAAeC,EAAf,KAEA,SAASZ,IACL,IAAI,IAAItK,EAAG,EAAGA,EAAE0J,EAAUzJ,OAAQD,IAC3B0J,EAAU1J,IACTqK,EAAO7K,KAAK2L,OAAOzB,EAAU1J,GAAGqK,SAEpCG,EAAcH,EAAOe,QAAO,SAAC9G,EAAG+G,GAAJ,OAAU/G,EAAI+G,MAE9CX,EAAWS,OAAOjB,EAAUN,UAAYuB,OAAOjB,EAAUL,WACzDe,EAAiBO,OAAOjB,EAAUJ,SAAWS,GAC7CO,EAAYK,OAAOjB,EAAUF,WAAamB,OAAOjB,EAAUH,aAC3DiB,GAAeG,OAAOjB,EAAUN,UAAYuB,OAAOR,IAAiBT,EAAUD,WAAaY,GAC3FK,GAAWT,EAAUE,GAAgBT,EAAUD,WAAaY,GAGhE,OACI,eAACzH,EAAA,EAAD,CAAKjF,UAAU,SAAf,UACI,cAACkF,EAAA,EAAD,CAAKlF,UAAU,2CAAf,yCAEA,cAACkF,EAAA,EAAD,UACI,eAACD,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAKlF,UAAU,mCAAf,qCACI,uBAAOA,UAAU,iCAAkCiG,KAAK,WAAWc,KAAK,SAASC,YAAY,8BAA8BoE,IAAI,IAAInE,SAAUlB,IACjJ,cAACb,EAAA,EAAD,CAAKlF,UAAU,mCAAf,4BACI,uBAAOA,UAAU,iCAAkCiG,KAAK,WAAWc,KAAK,SAASC,YAAY,qCAAqCoE,IAAI,IAAInE,SAAUlB,IACxJ,cAACb,EAAA,EAAD,CAAKlF,UAAU,mCAAf,2BACI,uBAAOA,UAAU,iCAAkCiG,KAAK,UAAUc,KAAK,SAASC,YAAY,0CAA0CoE,IAAI,IAAInE,SAAUlB,IAC3JwF,EAAU4B,KAAI,SAACC,EAAKC,GACjB,OACI,qCACR,cAACnI,EAAA,EAAD,CAAKlF,UAAU,mCAAf,4CACI,uBAAOA,UAAU,iCAAkCiG,KAAK,SAAShE,MAAOmL,EAAIlB,OAAQnF,KAAK,SAASC,YAAY,sCAAsCoE,IAAI,IAAInE,SAAU,SAAAhG,GAAC,OA7DjK,SAACA,EAAGqM,GAC1B,MAAsBrM,EAAE+E,OAAjBC,EAAP,EAAOA,KAAMhE,EAAb,EAAaA,MACPsL,EAAI,YAAOhC,GACjBgC,EAAKD,GAAOrH,GAAQhE,EACpBuJ,EAAa+B,GAyD8KC,CAAkBvM,EAAGoM,MAC3L9B,EAAUzJ,OAAO,IAAMuL,GACxB,wBAAQrN,UAAU,WAAWR,GAAG,YAAYwB,QAASiL,EAArD,iBACqB,IAApBV,EAAUzJ,QACX,wBAAQ9B,UAAU,WAAWR,GAAG,eAAewB,QAAS,kBAvDhF,SAAsBsM,GAClB,IAAMC,EAAI,YAAOhC,GACjBgC,EAAKE,OAAOH,EAAO,GACnB9B,EAAa+B,GAoDqEG,CAAaL,IAA3E,0BAIR,cAACnI,EAAA,EAAD,CAAKlF,UAAU,mCAAf,6BACI,uBAAOA,UAAU,gCAAgCiG,KAAK,aAAac,KAAK,SAASC,YAAY,kEAAkEoE,IAAI,IAAInE,SAAUlB,IACrL,cAACb,EAAA,EAAD,CAAKlF,UAAU,mCAAf,mCACI,uBAAOA,UAAU,gCAAgCiG,KAAK,YAAYc,KAAK,SAASC,YAAY,6CAA6CoE,IAAI,IAAInE,SAAUlB,IAC/J,cAACb,EAAA,EAAD,CAAKlF,UAAU,mCAAf,0CACI,uBAAOA,UAAU,gCAAgCiG,KAAK,aAAac,KAAK,SAASC,YAAY,yBAAyBoE,IAAI,IAAInE,SAAUlB,IAC5I,cAACb,EAAA,EAAD,CAAKyI,GAAI,IACT,cAACxG,EAAA,EAAD,CAAQnH,UAAU,8BAA8BgB,QA7DhE,WACIkJ,GAAQ,IA4DyE0D,eAAgBzB,EAArF,8BAGPlC,EACG,cAAC/E,EAAA,EAAD,CAAKlF,UAAU,qCAAf,SACI,eAACiF,EAAA,EAAD,CAAKjF,UAAU,gCAAf,UACI,cAACkF,EAAA,EAAD,CAAKlF,UAAU,0CAAf,iCACA,cAACkF,EAAA,EAAD,CAAKlF,UAAU,iCAAf,8CACA,eAACkF,EAAA,EAAD,CAAKlF,UAAU,wCAAf,kCAA4E,kCAAK4M,EAAWtC,QAAQ,GAAxB,YAA5E,uBAAqI,4BAAIyB,EAAUD,aAAnJ,cACA,cAAC5G,EAAA,EAAD,CAAKlF,UAAU,uCAAf,mCACA,eAACkF,EAAA,EAAD,CAAKlF,UAAU,wCAAf,4CAAsF,kCAAK8M,EAAOxC,QAAQ,GAApB,YAAtF,uBAA4IyB,EAAUD,WAAtJ,cACKpM,EACG,cAACyH,EAAA,EAAD,CAAQnH,UAAU,kCAAlB,iCAEA,kCAKhB,6BAEJ,eAACkF,EAAA,EAAD,CAAKlF,UAAU,SAASR,GAAG,aAA3B,UACI,cAAC0F,EAAA,EAAD,CAAKlF,UAAU,SAAf,wEACA,cAACkF,EAAA,EAAD,CAAKlF,UAAU,SAAf,2HACA,cAACkF,EAAA,EAAD,CAAKlF,UAAU,SAAf,kLCpBD6N,MAhFf,WACI,MAAwBjO,mBAAS,IAAjC,mBAAOyF,EAAP,KAAa5F,EAAb,KACA,EAAwBG,mBAAS,IAAjC,mBAAOF,EAAP,KAAaC,EAAb,KAwCF,OArBEqF,qBAAU,WAAM,4CACZ,8BAAAmB,EAAA,sEAEQC,QAAQC,IAAI,WAFpB,SAG2BC,IAAMuB,IAAI,iBAAkB,CAC3CiG,QAAS,CACLC,cAAc,UAAD,OAAY5M,aAAasF,UALtD,uBAGa9D,EAHb,EAGaA,KAHb,SAQclD,GAAQ,GARtB,wBAScE,EAAQgD,EAAKjD,MAT3B,0DAWQ0G,QAAQC,IAAI,WACZ5G,GAAQ,GACRE,EAAQ,MACRwB,aAAa6M,WAAW,SAdhC,2DADY,uBAAC,WAAD,wBAkBZC,KACD,CAAC5I,IAGF,cAAC,IAAD,UACI,eAACtF,EAAA,EAAD,CAAWC,UAAU,GAArB,UACI,cAAC,EAAD,CAAYP,QAASA,EAASE,QAASA,EAASD,KAAMA,IACpD,eAAC,IAAD,WACI,cAAC,IAAD,CAAOwO,KAAK,IAAIC,OAAK,EAArB,SACI,cAAC,EAAD,MAEJ,cAAC,IAAD,CAAOD,KAAK,SAASC,OAAK,EAA1B,SACI,cAAC,EAAD,CAAOzO,KAAMA,MAGjB,cAAC,IAAD,CAAOwO,KAAK,UAAUC,OAAK,EAA3B,SACI,cAAC,EAAD,CAAYzO,KAAMA,MAMtB,cAAC,IAAD,CAAOwO,KAAK,aAAaC,OAAK,EAA9B,SAEI,cAAC,EAAD,CAAczO,KAAMA,MAOxB,cAAC,IAAD,CAAOwO,KAAK,QAAQC,OAAK,EAAzB,SACI,cAACC,EAAD,CAAU/I,KAAMA,EAAM5F,QAASA,eC3ExC4O,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCCdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.545211dd.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport {Navbar, NavDropdown, Container, Col} from \"react-bootstrap\";\r\nimport {NavLink, useHistory} from \"react-router-dom\";\r\n\r\nfunction Navigation({id, setAuth, user, setUser}){\r\n    const [search, setSearch] = useState('');\r\n    let history = useHistory()\r\n\r\n    const clickHandler = (e) => {\r\n        history.push(`/chart/${search}`)\r\n    }\r\n    const textHandler = (e) => {\r\n        setSearch(e.target.value)\r\n    }\r\n    const keyPressHandler = (e) => {\r\n        if (e.key === 'Enter') {\r\n            history.push(`/chart/${search}`)\r\n        }\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        if (e.target.value !== {id})\r\n            e.preventDefault();\r\n    }\r\n\r\n    const logout = (e) => {\r\n        e.preventDefault()\r\n        localStorage.clear()\r\n        setAuth(false)\r\n        history.push('/') //redirect user to homepage once logout\r\n        setUser(null) //set user to null) once logout\r\n    }\r\n\r\n    return (\r\n        <Container className=\"\">\r\n                <Navbar expand=\"lg\" id=\"navigation\" variant=\"light\" className=\"color-nav\">\r\n                    <Navbar.Brand className=\"mx-4 \"  href=\"/\">MyFinancialPal</Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"responsive-navbar-nav\" className=\"\">\r\n                    <NavDropdown className=\"=col-md-9 \" title=\"Calculators\" id=\"responsive-nav-dropdown\">\r\n                        <NavDropdown.Item href=\"/efund\">Emergency Fund Planning</NavDropdown.Item>\r\n                        <NavDropdown.Item href=\"/retire\">Retirement Planning</NavDropdown.Item>\r\n                        <NavDropdown.Item href=\"/\">Education Planning</NavDropdown.Item>\r\n                        <NavDropdown.Item href=\"/\">Legacy Planning</NavDropdown.Item>\r\n                        <NavDropdown.Divider />\r\n                        <NavDropdown.Item href=\"/\"></NavDropdown.Item>\r\n                    </NavDropdown>\r\n                            { user ? (\r\n                            <div className=\"col-lg-10 d-flex align-items-center justify-content-end\">\r\n                                <Navbar.Text>Logged in:</Navbar.Text>\r\n                                <NavDropdown title={user.displayName} id=\"basic-nav-dropdown\" className='navbar-text '>\r\n                                    <NavLink to=\"/portfolio\" class=\"dropdown-item\">Profile</NavLink>\r\n                                    {/*<NavDropdown.Item onClick={linkToPortfolio}>Profile</NavDropdown.Item>*/}\r\n                                    <NavDropdown.Item onClick={logout}>Logout</NavDropdown.Item>\r\n                                </NavDropdown>\r\n                                    {/*<div className=\"px-2 avatar \"> {user.displayName.slice(0,1).toUpperCase()} </div>*/}\r\n                            </div>\r\n                        ) : (\r\n                            <NavLink to=\"/auth\" className='navbar-text col-10 d-flex justify-content-end'>Register / Login</NavLink>\r\n                        )}\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Navigation;\r\n","export default __webpack_public_path__ + \"static/media/boxing.6c7c7573.jpg\";","import React from 'react';\r\nimport {CanvasJSChart} from \"canvasjs-react-charts\";\r\nimport {Line} from \"react-chartjs-2\"\r\nimport * as singstat from \"../calculators/singstatjson.json\";\r\n\r\n\r\nfunction Inflation(props) {\r\n    let infData = singstat.default.Level1\r\n    let infDateArr = []\r\n    let infValueArr = []\r\n\r\n    //push date\r\n    for (let i = 0; i < infData.length ; i++){\r\n        if(infData[i].level_1 === \"All Items\") {\r\n            infDateArr.push(infData[i].year)\r\n            // console.log(infData[i].year)\r\n        }\r\n    }\r\n    //push value\r\n    for (let i = 0; i < infData.length; i++){\r\n        if(infData[i].level_1 === \"All Items\") {\r\n            infValueArr.push(infData[i].value)\r\n        }\r\n    }\r\n\r\n\r\n    const state = {\r\n            labels: infDateArr,\r\n        datasets: [\r\n            {\r\n                label: 'Consumer Price Index (CPI)',\r\n                fill: false,\r\n                lineTension: 0.5,\r\n                backgroundColor: 'rgba(129,244,225,1.00)',\r\n                borderColor: 'rgba(0,0,0,1)',\r\n                borderWidth: 0.7,\r\n                data: infValueArr,\r\n                hoverRadius: 7,\r\n            },\r\n            // {\r\n            //     label: 'abc',\r\n            //     fill: false,\r\n            //     lineTension: 0.5,\r\n            //     backgroundColor: 'rgba(75,192,192,1)',\r\n            //     borderColor: 'rgba(0,0,0,1)',\r\n            //     borderWidth: 1,\r\n            //     data: [null,null,4,5,6,7,8,9,null]\r\n            // }\r\n        ]\r\n    }\r\n    return (\r\n        <div>\r\n            <Line\r\n                data={state}\r\n                options={{\r\n                    title:{\r\n                        display:true,\r\n                        text:'Inflation (All-items per year)',\r\n                        fontSize:20\r\n                    },\r\n                    legend:{\r\n                        display:true,\r\n                        position:'right'\r\n                    },\r\n                    axisY:{\r\n                        crosshair: {\r\n                            enabled: true,\r\n                            snapToDataPoint: true\r\n                        }\r\n                    },\r\n                    axisX: {\r\n                        crosshair: {\r\n                            enabled: true,\r\n                            snapToDataPoint: true\r\n                        },\r\n                    },\r\n                    responsive: true,\r\n                    resizeDelay: 10,\r\n                    elements:{\r\n                        point:{\r\n                            radius:2.2\r\n                        }\r\n                    }\r\n                }}\r\n\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Inflation;\r\n","import React, {useEffect, useState} from 'react';\r\n\r\nfunction Quote(props) {\r\n    let quotes = ['“Compound interest is the eighth wonder of the world. He who understands it, earns it ... he who doesnt ... pays it.” ― Albert Einstein',\r\n        '“The intelligent investor is a realist who sells to optimists and buys from pessimists.”\\n' +\r\n        '― Benjamin Graham, The Intelligent Investor',\r\n        \"Have a good day ― guohao\",\r\n        '“In the short run, the market is a voting machine but in the long run, it is a weighing machine.”\\n' +\r\n        '― Benjamin Graham',\r\n        '“But investing isn’t about beating others at their game. It’s about controlling yourself at your own game.”\\n' +\r\n        '― Benjamin Graham, The Intelligent Investor',\r\n        '\"Smack that oh-oh!\" ―Akon'\r\n\r\n    ]\r\n\r\n    const [sexyQuote, setSexyQuote] = useState(\"\")\r\n    function getSexy(){\r\n        setSexyQuote(quotes[Math.floor(Math.random() * quotes.length)])\r\n    }\r\n\r\n    useEffect(() => {\r\n        getSexy()\r\n    },[])\r\n    return (\r\n        <div className=\"overlay\" id=\"homequote\" onClick={getSexy}>{sexyQuote}</div>\r\n    );\r\n}\r\n\r\nexport default Quote;\r\n","import React from 'react';\r\n\r\nimport {Line} from \"react-chartjs-2\";\r\nimport * as moneysupply from \"./M3supply.json\";\r\n\r\nfunction MoneySupply(props) {\r\n    let moneySupply = moneysupply.default\r\n    let moneyData = moneysupply.default.Level2.slice(200)\r\n    let moneyArr = []\r\n    let moneyDateArr = []\r\n    for(let i = 0; i < moneyData.length; i++) {\r\n        if(moneyData[i].level_2 === \"M2\"){\r\n            moneyArr.push(moneyData[i].month)\r\n            moneyDateArr.push(moneyData[i].value)\r\n        }\r\n        // if(moneyData[i].month == \"1991\") {\r\n        //     console.log(\"got the moneth\")\r\n        // }\r\n    }\r\n\r\n    const state = {\r\n        labels: moneyArr,\r\n        datasets: [\r\n            {\r\n                label: 'M2 Money Supply (Singapore)',\r\n                fill: false,\r\n                lineTension: 0.1,\r\n                backgroundColor: 'rgba(0,204,255,1.00)',\r\n                borderColor: 'rgba(0,0,0,1)',\r\n                borderWidth: 0.1,\r\n                data: moneyDateArr,\r\n                hoverRadius: 7,\r\n\r\n            },\r\n        ]\r\n    }\r\n    return (\r\n        <div>\r\n            <Line\r\n                data={state}\r\n                options={{\r\n                    title:{\r\n                        display:true,\r\n                        text:'Inflation (All-items per year)',\r\n                        fontSize:20\r\n                    },\r\n                    legend:{\r\n                        display:true,\r\n                        position:'right'\r\n                    },\r\n                    axisY:{\r\n                        crosshair: {\r\n                            enabled: true,\r\n                            snapToDataPoint: true\r\n                        }\r\n                    },\r\n                    axisX: {\r\n                        crosshair: {\r\n                            enabled: true,\r\n                            snapToDataPoint: true\r\n                        },\r\n                    },\r\n                    responsive: true,\r\n                    resizeDelay: 10,\r\n                    elements:{\r\n                        point:{\r\n                            radius:0.5\r\n                        }\r\n                    }\r\n                }}\r\n\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MoneySupply;\r\n","import React from 'react';\r\nimport {Line} from \"react-chartjs-2\";\r\nimport * as moneysupply from \"./M3supply.json\";\r\n\r\nfunction MoneySupplySt(props) {\r\n\r\n    let moneySupply = moneysupply.default\r\n    let moneyData = moneysupply.default.Level2.slice(341)\r\n    let moneyArr = []\r\n    let moneyDateArr = []\r\n    for(let i = 0; i < moneyData.length; i++) {\r\n        if(moneyData[i].level_2 === \"M2\"){\r\n            moneyArr.push(moneyData[i].month)\r\n            moneyDateArr.push(moneyData[i].value)\r\n        }\r\n        // if(moneyData[i].month == \"1991\") {\r\n        //     console.log(\"got the moneth\")\r\n        // }\r\n    }\r\n\r\n    const state = {\r\n        labels: moneyArr,\r\n        datasets: [\r\n            {\r\n                label: 'M2 Money Supply (Singapore)',\r\n                fill: false,\r\n                lineTension: 0.1,\r\n                backgroundColor: 'rgb(255,114,159)',\r\n                borderColor: 'rgba(0,0,0,1)',\r\n                borderWidth: 0.7,\r\n                data: moneyDateArr,\r\n                hoverRadius: 5,\r\n\r\n            },\r\n        ]\r\n    }\r\n    return (\r\n        <div>\r\n            <Line\r\n                data={state}\r\n                options={{\r\n                    title:{\r\n                        display:true,\r\n                        text:'Inflation (All-items per year)',\r\n                        fontSize:20\r\n                    },\r\n                    legend:{\r\n                        display:true,\r\n                        position:'right'\r\n                    },\r\n                    axisY:{\r\n                        crosshair: {\r\n                            enabled: true,\r\n                            snapToDataPoint: true\r\n                        }\r\n                    },\r\n                    axisX: {\r\n                        crosshair: {\r\n                            enabled: true,\r\n                            snapToDataPoint: true\r\n                        },\r\n                    },\r\n                    responsive: true,\r\n                    resizeDelay: 10,\r\n                    elements:{\r\n                        point:{\r\n                            radius:2\r\n                        }\r\n                    }\r\n                }}\r\n\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MoneySupplySt;\r\n","import React, {useEffect, useState} from 'react';\r\nimport {Container, Row, Col} from \"react-bootstrap\";\r\nimport boxing from \"../img/boxing.jpg\"\r\nimport {CanvasJSChart} from \"canvasjs-react-charts\";\r\nimport Inflation from \"./Inflation\";\r\nimport Quote from \"./Quote\";\r\nimport MoneySupply from \"./MoneySupply\";\r\nimport MoneySupplySt from \"./MoneySupplyST\";\r\n\r\n\r\nfunction Home() {\r\n\r\n    let quotes = ['“Compound interest is the eighth wonder of the world. He who understands it, earns it ... he who doesnt ... pays it.” ― Albert Einstein',\r\n        '“The intelligent investor is a realist who sells to optimists and buys from pessimists.”\\n' +\r\n        '― Benjamin Graham, The Intelligent Investor',\r\n        \"<3 sei29 ― guohao\",\r\n        '“In the short run, the market is a voting machine but in the long run, it is a weighing machine.”\\n' +\r\n        '― Benjamin Graham',\r\n        '“But investing isn’t about beating others at their game. It’s about controlling yourself at your own game.”\\n' +\r\n        '― Benjamin Graham, The Intelligent Investor',\r\n        '\"Money no problem, pocket full of that now.\" ― Akon'\r\n\r\n    ]\r\n\r\n    const [sexyQuote, setSexyQuote] = useState(\"\")\r\n    function getSexy(){\r\n        setSexyQuote(quotes[Math.floor(Math.random() * quotes.length)])\r\n    }\r\n\r\n    useEffect(() => {\r\n        getSexy()\r\n    },[])\r\n\r\n    return (\r\n        <Container className=\"min-vh-100 \">\r\n            <Row className=\"\">\r\n                <Col className=\"col-lg-12 text-center lavender banner\">\r\n                    <h3 id=\"title\">\r\n                        MyFinancialPal\r\n                    </h3>\r\n                    <h5 id=\"subtitle\">\r\n                        Money matters made manageable.\r\n                    </h5>\r\n                    <h5 id=\"homequote\" className=\"col-lg-12 mt-5 d-flex justify-content-center\" onClick={getSexy}>\r\n                        {sexyQuote}\r\n                    </h5>\r\n                </Col>\r\n                <Col className=\"col-lg-8 mt-3 \">\r\n                    <Inflation />\r\n                </Col>\r\n                <Col className=\"col-lg-4 mt-3\">\r\n                    <MoneySupply/>\r\n\r\n                    <MoneySupplySt/>\r\n                </Col>\r\n                <Col className=\"col-lg-12 vh-100 homepageTwo\">\r\n\r\n\r\n                </Col>\r\n            </Row>\r\n\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n","import React, {useEffect, useState} from 'react';\r\nimport {Col, Container, Row} from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport * as singstat from \"./singstatjson.json\"\r\nimport Quote from \"../general/Quote\";\r\n\r\nfunction RetirementPlanner({user}) {\r\n    const [currentFund, setCurrentFund] = useState(0)\r\n    const [retireExpense, setRetireExpense] = useState(0)\r\n    const [currentAge, setCurrentAge] = useState(0)\r\n    const [retireAge, setRetireAge] = useState(0)\r\n    const [lifeExpectancy, setLifeExpectancy] = useState(0)\r\n    const [investReturn, setInvestReturn] = useState(0.05)\r\n\r\n    function changeCurrentFund(e) {\r\n        setCurrentFund(e.target.value)\r\n    }\r\n    function changeRetireExpense(e) {\r\n        setRetireExpense(e.target.value)\r\n    }\r\n    function changeCurrentAge(e){\r\n        setCurrentAge(e.target.value)\r\n        // getRetirePlan()\r\n    }\r\n    function changeRetireAge(e){\r\n        setRetireAge(e.target.value)\r\n        getRetirePlan()\r\n    }\r\n    function changeLifeExpectancy(e){\r\n        setLifeExpectancy(e.target.value)\r\n        getRetirePlan()\r\n    }\r\n    function changeInvestReturn(e){\r\n        setInvestReturn(e.target.value)\r\n    }\r\n\r\n    let data = singstat.default.Level1\r\n\r\n    let accumulationPeriod = retireAge - currentAge // cannot be more than 59years\r\n    if(accumulationPeriod > data[data.length-1].year-data[0].year){\r\n        accumulationPeriod = data[data.length-1].year-data[0].year\r\n    }\r\n    if(accumulationPeriod < 0){\r\n        accumulationPeriod = 0\r\n    }\r\n\r\n    const [startInflationYear, setStartInflationYear] = useState(0)\r\n    const [cumulativeInflation, setCumulativeInflation] = useState(0)\r\n    const [annualInflation, setAnnualInflation] = useState(0)\r\n    const [showResult, setShowResult] = useState(false)\r\n    const [backtraceFrom, setBacktraceFrom] = useState(0)\r\n    const [currentYearInflation, setCurrentYearInflation] = useState(0)\r\n\r\n    async function getRetirePlan(e) { //make this show results on click\r\n        await setBacktraceFrom(data.length - 3) //last index of json\r\n        await setCurrentYearInflation(data[backtraceFrom].year)\r\n        let startInfIndex = backtraceFrom-(accumulationPeriod * 3)\r\n        await setStartInflationYear(data[startInfIndex]?.year) //backtrace to X years before\r\n        let inflationStart = data[backtraceFrom-(accumulationPeriod * 3)]?.value\r\n        let inflationEnd = data[backtraceFrom]?.value // remove -3 for latest\r\n        setCumulativeInflation(((inflationEnd - inflationStart) / inflationStart) * 100)\r\n        setAnnualInflation(((inflationEnd / inflationStart)**(1/(currentYearInflation-startInflationYear)))-1)\r\n    }\r\n\r\n    const [results, setResults] = useState({})\r\n\r\n    let growthRate = Math.abs(investReturn/100) //growth rate in decimals\r\n\r\n    async function getResults(e){\r\n        setShowResult(true)\r\n        setResults({})\r\n        let discountRate = (growthRate - annualInflation)  //R real returns in decimals\r\n        let drawdownPeriod = lifeExpectancy - retireAge //N\r\n\r\n        let retireFunds = 0\r\n        let annualSavings = 0\r\n        //vanilla savings\r\n        retireFunds = retireExpense*drawdownPeriod-currentFund\r\n        annualSavings = (retireExpense*drawdownPeriod-currentFund)/accumulationPeriod\r\n        cumulativeInflation.toFixed(2) //does not work yet\r\n        await setResults(prevState => ({...prevState,\r\n            retireFunds: retireFunds,\r\n            annualSavings: annualSavings,\r\n            presentValueRetireFunds: presentValueRetireFunds,\r\n            presentValueSavingsRequired: presentValueSavingsRequired,\r\n            infAdjRetireFunds: infAdjRetireFunds,\r\n            infAdjAnnualSavings: infAdjAnnualSavings,\r\n        }))\r\n    }\r\n    let inflationPercent = (annualInflation*100).toFixed(2)\r\n\r\n    let discountRate = (growthRate - annualInflation)  //R real returns\r\n    let drawdownPeriod = lifeExpectancy - retireAge //N\r\n\r\n    //vanilla savings\r\n    let retireFunds = retireExpense*drawdownPeriod-currentFund\r\n    let annualSavings = (retireExpense*drawdownPeriod-currentFund)/accumulationPeriod\r\n\r\n    let infAdjRetireFunds = retireExpense *((1-(1+discountRate)**(-drawdownPeriod))/discountRate)//PV/FV at retirement age (Ordinary Annuity)\r\n    //PV = PMT((1-(1+r)^-n)/r)\r\n    let presentValueRetireFunds = infAdjRetireFunds*(1/(1+discountRate)**accumulationPeriod)\r\n    let presentValueSavingsRequired = presentValueRetireFunds - currentFund\r\n    let infAdjAnnualSavings = presentValueSavingsRequired/(((1-(1+discountRate)**-accumulationPeriod)/discountRate)) //PMT (Ordinary Annuity)\r\n\r\n    // let infAdjAnnualSavings = infAdjRetireFunds/(((1+growthRate)**accumulationPeriod-1)/growthRate) //PMT (Ordinary Annuity)\r\n    //PMT = (FV/((1+r)^n-1)/r)\r\n    console.log(`infAdjFund =${infAdjRetireFunds} growthrate =${growthRate} accperiod =${accumulationPeriod}`)\r\n\r\n    async function savePlan(e){\r\n        e.preventDefault()\r\n        try{\r\n            await axios.post(\"/api/retire/plan\", {\r\n                currentFund: currentFund,\r\n                retireExpense: retireExpense,\r\n                currentAge: currentAge,\r\n                retireAge: retireAge,\r\n                accumulationPeriod: retireAge - currentAge,\r\n                lifeExpectancy: lifeExpectancy,\r\n                investReturn: investReturn,\r\n                retireFunds: retireFunds,\r\n                annualSavings: annualSavings,\r\n                infAdjRetireFunds: infAdjRetireFunds,\r\n                infAdjAnnualSavings: infAdjAnnualSavings,\r\n                entryDate: new Date(),\r\n                userId: user._id,\r\n                annualInflation:annualInflation,\r\n                cumulativeInflation:cumulativeInflation\r\n            })\r\n            alert(\"Plan Saved!\")\r\n        }catch(e){\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Row className=\"retirementplanning  justify-content-center champange \">\r\n            <Col className=\"col-12 text-center mt-3 mb-3\"><h5 >Retirement Planner</h5></Col>\r\n            <Col className=\"col-md-7 mt-3\">\r\n                    <Row>\r\n                        <Col className=\"col-12 col-md-12\">\r\n                            <Row className=\"align-items-center\">\r\n                                <Col className=\"col-6 text-lg-end\">\r\n                                    <label>Current Retirement Fund:</label>\r\n                                </Col>\r\n                                    <input className=\"text-start w-50 px-1\" required type=\"number\" name=\"currentFund\" placeholder=\"Current retirement fund\" min={1} onChange={changeCurrentFund} />\r\n                            </Row>\r\n\r\n                            <Row className=\"align-items-center mt-1\">\r\n                                <Col className=\"col-6 col-md-6 text-lg-end\">\r\n                                    <label>Desired Annual Retirement Expenses:</label>\r\n                                </Col>\r\n                                    <input className=\"text-start w-50 px-1\" type=\"number\" name=\"retireExpense\" placeholder=\"Annual expenses in retirement\" min={1} onChange={changeRetireExpense} />\r\n                            </Row>\r\n                            <Row className=\"align-items-center mt-1\">\r\n                                <Col className=\"col-6 col-md-6 text-lg-end\">\r\n                                    <label>Target Retirement Age:</label></Col>\r\n                                    <input className=\"text-start w-50 px-1\" type=\"number\" name=\"retireAge\" placeholder=\"Target retirement age\" min={1} onChange={changeRetireAge} />\r\n                            </Row>\r\n                            <Row className=\"align-items-center mt-1\">\r\n                                <Col className=\"col-6 col-md-6 text-lg-end\">\r\n                                    <label>Current Age:</label> </Col>\r\n                                    <input className=\"text-start w-50 px-1\" type=\"number\" name=\"currentAge\" placeholder=\"Current age\" min={1} onChange={changeCurrentAge} />\r\n                            </Row>\r\n                            <Row className=\"align-items-center mt-1\">\r\n                                <Col className=\"col-6 col-md-6 text-lg-end\">\r\n                                    <label>Life Expectancy:</label></Col>\r\n                                    <input className=\"text-start w-50 px-1\"  type=\"number\" name=\"lifeExpectancy\" placeholder=\"Life expectancy\" min={1} onChange={changeLifeExpectancy} />\r\n                            </Row>\r\n                            <Row className=\"align-items-center mt-1\">\r\n                                <Col className=\"col-6 col-md-6 text-lg-end\">\r\n                                    <label>Expected Investment Return (%): </label></Col>\r\n                                    <input className=\"text-start w-50 px-1\"  type=\"number\" name=\"investReturn\" placeholder=\"Assumed at 0.05% prevailing bank i/r.\" min={1} onChange={changeInvestReturn} />\r\n                            </Row>\r\n                            <Row className=\"text-center mt-4 \">\r\n                                <Col className=\"col-6 col-md-6\"></Col>\r\n                                <Col className=\"\">\r\n                                    <button className=\"btn-primary w-100 \" onClick={getResults}>Get Result</button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Col>\r\n\r\n                    </Row>\r\n            </Col>\r\n            {showResult ?\r\n                <Col className=\"col-5 \">\r\n                    <Row className=\" d-flex justify-content-center\">\r\n                        <Col className=\"col-12 col-md-12 text-center\">\r\n                            <label>Retirement Fund Required:</label></Col>\r\n                        <Col className=\"col-8 col-md-8 text-center\">\r\n                            <Col>${results.retireFunds}</Col>\r\n                            {/*<input className=\"text-center w-50\" type=\"number\" name=\"mthlySavings\" placeholder=\"Return amount\" />*/}\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"mt-3 d-flex justify-content-center\">\r\n                        <Col className=\"col-12 col-md-12 text-center\">\r\n                            <label>Annual Savings Required</label></Col>\r\n                        <Col className=\"col-8 col-md-8 text-center\">\r\n                            <Col>${results.annualSavings}/year</Col>\r\n                            {/*<input className=\"text-center w-50\" type=\"number\" name=\"mthlySavings\" placeholder=\"Return amount\" />*/}\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"mt-3 d-flex justify-content-center\">\r\n                        <Col className=\"col-12 col-md-12 text-center\">\r\n                            <label>Inflation Adjusted Retirement Fund Required</label></Col>\r\n                        <Col className=\"col-8 col-md-8 text-center\">\r\n                            <Col>${results.infAdjRetireFunds}</Col>\r\n                            {/*<input className=\"text-center w-50\" type=\"number\" name=\"mthlySavings\" placeholder=\"Return amount\" />*/}\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"mt-3 d-flex justify-content-center\">\r\n                        <Col className=\"col-12 col-md-12 text-center\">\r\n                            <label>Inflation Adjusted Annual Savings</label></Col>\r\n                        <Col className=\"col-8 col-md-8 text-center\">\r\n                            <Col>${results.infAdjAnnualSavings}</Col>\r\n                            {/*<input className=\"text-center w-50\" type=\"number\" name=\"adjSavings\" placeholder=\"Return amount\" />*/}\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"text-center mt-4 \">\r\n                        <Col className=\"col-12 col-md-12 text-center mt-2\"></Col>\r\n                        <Col className=\"\">\r\n                            {user ?\r\n                                <button className=\"btn-primary w-50 \" onClick={savePlan}>Save To Portfolio</button>\r\n                                :\r\n                                <></>\r\n                            }\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n                :\r\n                <></>\r\n            }\r\n            { showResult ?\r\n                <>\r\n            <Col className=\"col-12 mt-5 fw-bold \">Report:</Col>\r\n            <Col className=\"col-12 \">You have {accumulationPeriod} years to accumulate your retirement funds.\r\n                Over the past {accumulationPeriod} years from {startInflationYear} to {currentYearInflation},\r\n                cumulative inflation was {cumulativeInflation}% with average annual inflation of {inflationPercent}%.\r\n            </Col>\r\n            </>\r\n            :\r\n            <></>\r\n            }\r\n\r\n        </Row>\r\n\r\n)\r\n    ;\r\n}\r\n\r\nexport default RetirementPlanner;\r\n","import React, { useState } from 'react';\r\nimport {Form, Row, Col, Button} from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from 'react-router-dom'\r\n\r\n\r\n\r\nfunction Register({auth, setAuth, user}) {\r\n    //toggle between registration and login\r\n    const [isSignup, setIsSignup] = useState(true);\r\n    const switchMode = () => {\r\n        setIsSignup((prevIsSignup) => !prevIsSignup)\r\n    }\r\n    //handles input fields\r\n    const initialState = { firstName: '', lastName: '', email: '', password: '', confirmPassword: ''} //for sign up field\r\n    const [formData, setFormData] = useState(initialState)\r\n    const history = useHistory()\r\n\r\n    const handleChange = (e) => {\r\n        setFormData({...formData, [e.target.name]: e.target.value})\r\n    }\r\n\r\n    const registerSubmit = async(e) => {\r\n        e.preventDefault(); //prevent refresh on form submit\r\n        try {\r\n            console.log(\"something\")\r\n            let res = await axios.post(\"/api/auth/register\", formData)\r\n            console.log(res)\r\n            console.log(res.data.token)\r\n            localStorage.setItem(\"token\", res.data.token)\r\n            setAuth(true)\r\n            history.push('/')\r\n        } catch (error) {\r\n            console.log(`HEREEREREER ${error}`)\r\n            alert(error)\r\n        }\r\n    }\r\n\r\n    const loginSubmit = async(e) => {\r\n        e.preventDefault(); //prevent refresh on form submit\r\n        try {\r\n            let res = await axios.post(\"/api/auth/login\", formData)\r\n            console.log(res.data.token)\r\n            localStorage.setItem(\"token\", res.data.token)\r\n            setAuth(true)\r\n            history.push('/')\r\n        }catch(error){\r\n            console.log(error)\r\n            alert(error)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <Row className=\"justify-content-center champange\">\r\n            <Col className=\"col-12 text-center roboto\"><h3>{isSignup ? \"Register\" : \"Log In\"}</h3></Col>\r\n            <Col className=\"d-flex justify-content-center col-md-12l-12 roboto\">\r\n                <Row>\r\n                    <Col className=\"col-12 signupForm\">\r\n                        <Form onSubmit={isSignup ? registerSubmit : loginSubmit}>\r\n                            { isSignup && (\r\n                                <Row className=\"align-items-center mt-3\">\r\n                                    <Col className=\"col-12 col-md-6 text-right\">\r\n                                        <label>Display Name</label></Col>\r\n                                    <Col className=\"col-12 col-md-6\">\r\n                                        {/*<FormControl className=\"col-6 mx-auto\" type=\"text\" placeholder=\"First Name\" name=\"firstName\" onChange={handleChange} ></FormControl>*/}\r\n                                        {/*<FormControl className=\"col-6 mx-auto\" type=\"text\" placeholder=\"Last Name\" name=\"lastName\" onChange={handleChange} ></FormControl>*/}\r\n                                        <input type=\"text\" placeholder=\"Display Name\" name=\"displayName\" onChange={handleChange} required />\r\n                                    </Col>\r\n                                </Row>\r\n                            )}\r\n                            {/*<FormControl type=\"email\" placeholder=\"Display Name\" name=\"displayName\" onChange={handleChange} />*/}\r\n                            <Row className=\"align-items-center mt-1\">\r\n                                <Col className=\"col-12 col-md-6 text-right\">\r\n                                    <label>Email</label></Col>\r\n                                <Col className=\"col-12 col-md-6\">\r\n                                    <input type=\"email\" placeholder=\"Email Address\" name=\"email\" onChange={handleChange} required />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"align-items-center mt-1\">\r\n                                <Col className=\"col-12 col-md-6 text-right\">\r\n                                    <label>Password</label></Col>\r\n                                <Col className=\"col-12 col-md-6\">\r\n                                    <input placeholder=\"Password\" name=\"password\" onChange={handleChange} type='password' required  />\r\n                                </Col>\r\n                            </Row>\r\n                            {isSignup &&\r\n                            <Row className=\"align-items-center mt-1 mb-3\">\r\n                                <Col className=\"col-12 col-md-6 text-right\">\r\n                                    <label>Confirm Password</label></Col>\r\n                                <Col className=\"col-12 col-md-6\">\r\n                                    <input className='confirmPassword' placeholder='Confirm Password' name=\"confirmPassword\" onChange={handleChange} type=\"password\" required />\r\n                                </Col>\r\n                            </Row>\r\n                            }\r\n                            <Row className=\"mt-2 mb-4 text-center\">\r\n                                <Col className=\"col-12\">\r\n                                    <Button type='submit' variant=\"primary\" >\r\n                                        {isSignup ? \"Sign Up\" : \"Sign In\"}\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"text-center\">\r\n                                <Col className=\"col-12 \">\r\n                                    <a onClick={switchMode} >\r\n                                        {isSignup ? 'Already have an account? Sign In' : \"Don't have an account? Sign Up\"}\r\n                                    </a>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </Col>\r\n                </Row>\r\n            </Col>\r\n        </Row>\r\n\r\n    );\r\n}\r\n\r\nexport default Register;\r\n","import React, {useEffect, useState} from 'react';\r\nimport axios from \"axios\";\r\nimport {Col, Row, Button} from \"react-bootstrap\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\n\r\nfunction RetirePortfolio({user}) {\r\n    const[retirePlan, setRetirePlan] = useState([])\r\n    const[entryYear, setEntryYear] = useState([])\r\n    const[entryMonth, setEntryMonth] = useState([])\r\n    console.log(user.retirementPlan)\r\n    let history = useHistory()\r\n    useEffect( ()=>{\r\n        if(user.retirementPlan === null) {\r\n            history.push(\"/\")\r\n        } else if(user.retirementPlan){\r\n            showRetire()\r\n        }\r\n    },[user])\r\n\r\n    async function showRetire() {\r\n        console.log(\"showretire\")\r\n        try{\r\n            let res = await axios.get(`/api/retire/${user.retirementPlan._id}`) //hit this route from /this component page\r\n            setRetirePlan(res.data.retirePlan)\r\n            let entryDate = res.data.retirePlan.entryDate.split(\"-\")\r\n            console.log(entryDate)\r\n            // setEntryYear(entryDate[0])\r\n            setEntryYear(entryDate[0])\r\n            // setEntryMonth(entryDate[1])\r\n            setEntryMonth(entryDate[1])\r\n        }catch(err){\r\n            console.log(err)\r\n        }\r\n    }\r\n    async function deletePlan(e){\r\n        e.preventDefault()\r\n        try{\r\n            console.log(\"delete function\")\r\n            await axios.delete(`/api/user/delete/${user._id}`)\r\n            await axios.delete(`/api/retire/delete/${user.retirementPlan._id}`)\r\n            console.log(user.retirementPlan._id)\r\n            // user.retirementPlan = []\r\n            console.log(`deleted ${user.retirementPlan}`)\r\n            alert(\"Plan Deleted\")\r\n            history.push(\"/\")\r\n        }catch (e){\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n    // async function deletePlan(e){\r\n    //     e.preventDefault()\r\n    //     try{\r\n    //\r\n    //     }catch(e){\r\n    //         console.log(e)\r\n    //     }\r\n    // }\r\n\r\n    console.log(retirePlan)\r\n    return (\r\n        <Row className=\"col-4 my-3\">\r\n            <h3 className=\"text-center resultTitle mt-2\">Retirement</h3>\r\n            <p className=\"disclaimer text-end mb-4\">Planned on: {entryMonth}/{entryYear}</p>\r\n            <Col className=\"inputDesc col-7 col-md-7 text-end mt-1\">Retirement Expense:</Col>\r\n                <input className=\"inputText col-5 col-md-5 mb-3 \" name=\"\" type=\"number\" placeholder={retirePlan.retireExpense} disabled={true}/>\r\n            <Col className=\"inputDesc col-7 col-md-7 text-end mt-1\">Retirement Age:</Col>\r\n                <input className=\"inputText col-6 col-md-5 mb-3\" name=\"retireAge\" type=\"number\" placeholder={retirePlan.retireAge} disabled={true}/>\r\n            <Col className=\"resultSubheader col-12 text-center my-3\">Vanilla</Col>\r\n            <Col className=\"inputDesc col-5 col-md-7 text-end mt-1\">Funds at Retirement:</Col>\r\n                <input className=\"inputText col-6 col-md-5 mb-3\" name=\"lifeExp\" type=\"number\" placeholder={retirePlan.retireFunds} disabled={true}/>\r\n            <Col className=\"inputDesc col-5 col-md-7 text-end mt-1 \">Savings per annum:</Col>\r\n                <input className=\"inputText col-6 col-md-5 mb-3\"  name=\"expReturns\" type=\"number\" placeholder={retirePlan.annualSavings} disabled={true}/>\r\n            <Col className=\"resultSubheader col-12 text-center my-3\">Inflation Adjusted</Col>\r\n            <Col className=\"inputDesc col-5 col-md-7 text-end mt-1\">Funds at Retirement:</Col>\r\n                <input className=\"inputText col-6 col-md-5 mb-3\" name=\"lifeExp\" type=\"number\" placeholder={retirePlan.infAdjRetireFunds} disabled={true}/>\r\n            <Col className=\"inputDesc col-5 col-md-7 text-end mt-1 \">Savings per annum:</Col>\r\n                <input className=\"inputText col-5 col-md-5 mb-3\"  name=\"expReturns\" type=\"number\" placeholder={retirePlan.infAdjAnnualSavings} disabled={true}/>\r\n            <Col className=\"col-5 col-md-8 \"></Col>\r\n            <button className=\"col-6 col-md-4 mt-2 buttonColor\" onClick={deletePlan} >Delete Plan</button>\r\n        </Row>\r\n    );\r\n}\r\n\r\nexport default RetirePortfolio;\r\n","import React, {useEffect, useState, useRef} from 'react';\r\nimport axios from \"axios\";\r\nimport {Col, Row, Button} from \"react-bootstrap\";\r\nimport * as singstat from \"./singstatjson.json\"\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nfunction RetirePlan({user}) {\r\n    let history = useHistory()\r\n\r\n    const initialState = { startFund: 0, retireExpense: 0, retireAge: 0, startAge: 0, lifeExp: 0, expReturns: 0.05}\r\n    const [retireForm, setRetireForm] = useState(initialState)\r\n    function handleChange(e) {\r\n        setRetireForm({...retireForm, [e.target.name] : e.target.value})\r\n    }\r\n\r\n    const [drawdownPeriod, setDrawdownPeriod] = useState(0)\r\n    const [startInfYear, setStartInfYear] = useState(0)\r\n    const [endInfYear, setEndInfYear] = useState(0)\r\n    const [startInfValue, setStartInfValue] = useState(0)\r\n    const [endInfValue, setEndInfValue] = useState(0)\r\n    const [cumInflation, setCumInflation] = useState(0)\r\n    const [annualInflation, setAnnualInflation] = useState(0)\r\n    const [realReturns, setRealReturns] = useState(0)\r\n    const [show, setShow] = useState(false)\r\n\r\n    let data = singstat.default.Level1\r\n    let infData = []\r\n    for(let i = 0; i < data.length; i++){\r\n        if(data[i].level_1 === \"All Items\"){\r\n            infData[i/3] = {\r\n                year: data[i].year,\r\n                value: data[i].value\r\n            }\r\n        }\r\n    }\r\n    let accPeriod = 0;\r\n    if(accPeriod > data[data.length-1].year - data[0].year){\r\n        accPeriod = (data[data.length-1].year - data[0].year)\r\n    }else if(accPeriod < 0 ){\r\n        accPeriod = 0\r\n    }else{\r\n        accPeriod = retireForm.retireAge - retireForm.startAge\r\n    }\r\n    useEffect(()=>{\r\n        enterRetirePlan()\r\n    },[retireForm])\r\n\r\n    async function enterRetirePlan(e) {\r\n        setDrawdownPeriod(retireForm.lifeExp - retireForm.retireAge)\r\n        setEndInfYear(infData[infData.length-1]?.year) //2020\r\n        setStartInfYear(infData[infData.length - accPeriod]?.year)\r\n        setEndInfValue(infData[infData.length-1]?.value) //2020\r\n        setStartInfValue(infData[infData.length - accPeriod]?.value)\r\n        await setCumInflation((-(startInfValue - endInfValue) / startInfValue)*100)\r\n        await setAnnualInflation(((endInfValue/startInfValue)**(1/accPeriod)-1)*100 )\r\n        await setRealReturns((retireForm.expReturns - annualInflation)/100) //in percentage\r\n        }\r\n    let vRetireFund = (retireForm.retireExpense * drawdownPeriod).toFixed(2)\r\n    let vRetireSaving = ( (retireForm.retireExpense * drawdownPeriod - retireForm.startFund) / accPeriod).toFixed(2)\r\n\r\n    let infRetireFund = (retireForm.retireExpense* ((1-(1+realReturns)**(-drawdownPeriod))/realReturns) *(1+realReturns)).toFixed(2)\r\n    let fvStartFund = (retireForm.startFund*((1+realReturns)**accPeriod))\r\n    let reqInfRetireFund = (infRetireFund-fvStartFund)\r\n    let infRetireSavings = ((reqInfRetireFund/(1+realReturns)) / (( ((1+realReturns)**accPeriod) -1)/realReturns) ).toFixed(2)\r\n\r\n    function showResult(){\r\n        setShow(true)\r\n    }\r\n    function getResults(){\r\n        enterRetirePlan()\r\n        showResult()\r\n\r\n    }\r\n    // const inputRef1 = useRef()\r\n    // const inputRef2 = useRef()\r\n    // const inputRef3 = useRef()\r\n    // const inputRef4 = useRef()\r\n    // const inputRef5 = useRef()\r\n    // const inputRef6 = useRef()\r\n    // function refreshForm(){\r\n    //     setRetireForm(initialState)\r\n    //     // window.location.reload()\r\n    //     inputRef1.current.value = 0\r\n    //     inputRef2.current.value = 0\r\n    //     inputRef3.current.value = 0\r\n    //     inputRef4.current.value = 0\r\n    //     inputRef5.current.value = 0\r\n    //     inputRef6.current.value = 0\r\n    // }\r\n\r\n    console.log(infRetireSavings)\r\n    console.log(infRetireFund)\r\n    async function savePlan(e) {\r\n        console.log(\"hit\")\r\n        e.preventDefault()\r\n        try {\r\n            console.log(\"nope\")\r\n            await axios.post(\"/api/retire/plan\", {\r\n                currentFund: retireForm.startFund,\r\n                retireExpense: retireForm.retireExpense,\r\n                currentAge: retireForm.startAge,\r\n                retireAge: retireForm.retireAge,\r\n                accumulationPeriod: accPeriod,\r\n                lifeExpectancy: retireForm.lifeExp,\r\n                investReturn: retireForm.expReturns,\r\n                retireFunds: vRetireFund,\r\n                annualSavings: vRetireSaving,\r\n                infAdjRetireFunds: infRetireFund,\r\n                infAdjAnnualSavings: infRetireSavings,\r\n                entryDate: new Date(),\r\n                userId: user._id,\r\n                annualInflation: annualInflation,\r\n                cumulativeInflation: cumInflation\r\n            })\r\n            console.log(\"plan saved\")\r\n            alert(\"Plan Saved!\")\r\n            history.push(\"/\")\r\n        }catch (e){\r\n            alert(\"Retirement Plan already exists, please access in profile page.\")\r\n            console.log(e)\r\n    }\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <h3 className=\"col-12 mt-3 text-center titleStyle \">Retirement Planner</h3>\r\n            <Col className=\"\">\r\n                <Row >\r\n                    <Col className=\"inputDesc col-5 col-md-5 text-end mt-1\">Current Retirement Fund:</Col>\r\n                        <input className=\"inputText col-6 col-md-6 mb-3 \"  name=\"startFund\" type=\"number\" placeholder=\"Enter funds allocated for retirement\" min=\"0\" onChange={handleChange} />\r\n                    <Col className=\"inputDesc col-5 col-md-5 text-end mt-1\">Retirement Expense:</Col>\r\n                        <input className=\"inputText col-6 col-md-6 mb-3\" name=\"retireExpense\" type=\"number\" placeholder=\"Enter desired annual retirement expense\" min=\"0\" onChange={handleChange} />\r\n                    <Col className=\"inputDesc col-5 col-md-5 text-end mt-1\">Current Age:</Col>\r\n                        <input className=\"inputText col-6 col-md-6 mb-3\" name=\"startAge\" type=\"number\" placeholder=\"Enter current age\" min=\"0\" onChange={handleChange} />\r\n                    <Col className=\"inputDesc col-5 col-md-5 text-end mt-1\">Retirement Age:</Col>\r\n                        <input className=\"inputText col-6 col-md-6 mb-3\" name=\"retireAge\" type=\"number\" placeholder=\"Enter targeted retirement age\" min=\"0\" onChange={handleChange}/>\r\n                    <Col className=\"inputDesc col-5 col-md-5 text-end mt-1\">Life Expectancy:</Col>\r\n                        <input className=\"inputText col-6 col-md-6 mb-3\" name=\"lifeExp\" type=\"number\" placeholder=\"Reference family history for accuracy\" min=\"0\" onChange={handleChange} />\r\n                    <Col className=\"inputDesc col-5 col-md-5 text-end mt-1 \">Expected returns (%):</Col>\r\n                        <input className=\"inputText col-6 col-md-6 mb-3\"  name=\"expReturns\" type=\"number\" placeholder=\"0.05% if left blank (assumed at base i/r)\" min=\"0\" onChange={handleChange} />\r\n                    <Col className=\"col-5 col-md-5 \"></Col>\r\n                        {/*{!disabled ?*/}\r\n                            <Button className=\"col-6 col-md-6 buttonColor\" onClick={getResults} >Get Results</Button>\r\n                        {/*//     :*/}\r\n                        {/*//     <Button className=\"col-3 col-md-3 bg-info \" onClick={refreshForm}>Refresh</Button>*/}\r\n                        {/*// }*/}\r\n                </Row>\r\n            </Col>\r\n            {show ?\r\n                <Col className=\"col-6 col-md-6\">\r\n                    <Row>\r\n                        <Col className=\"col-12 col-md-12 text-center\">\r\n                            <Col className=\"resultHeader\">Vanilla Savings</Col>\r\n                            <Row className=\"d-flex justify-content-center \">\r\n                                <Col className=\"resultSubheader col-6 col-md-6 text-center my-2 \">Retirement Fund Required:\r\n                                    <input className=\"result col-5 w-75 col-md-5 text-center mx-3 \" name=\"\" type=\"number\" placeholder={vRetireFund} disabled={true}/>\r\n                                </Col>\r\n                                <Col className=\"resultSubheader col-6 col-md-6 text-center my-2 \">Annual Savings Required:\r\n                                    <input className=\"result col-5 w-75 col-md-5 text-center mx-3\" name=\"\" type=\"number\" placeholder={vRetireSaving} disabled={true}/>\r\n                                </Col>\r\n                            </Row>\r\n                            <Col className=\"resultHeader mt-5\">Inflation Adjusted Savings</Col>\r\n                            <Row className=\"d-flex justify-content-center \">\r\n                                <Col className=\"resultSubheader col-6 col-md-6 text-center my-1 \">Retirement Fund Required:\r\n                                    <input className=\"result col-5 w-75 col-md-5 text-center mx-3 \" name=\"\" type=\"number\" placeholder={infRetireFund} disabled={true}/>\r\n                                </Col>\r\n                                <Col className=\"resultSubheader col-6 col-md-6 text-center my-1\">Annual Savings Required:\r\n                                    <input className=\"result col-5 w-75 col-md-5 text-center mx-3\" name=\"\" type=\"number\" placeholder={infRetireSavings} disabled={true}/>\r\n                                </Col>\r\n                            </Row>\r\n                            {user ?\r\n                                <Button className=\"mt-md-5 w-50 mb-5 buttonColor\" onClick={savePlan} onSubmit={savePlan}>Save Retirement\r\n                                    Plan</Button>\r\n                                :\r\n                                <></>\r\n                            }\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n                :\r\n                <></>\r\n            }\r\n\r\n\r\n            {show ?\r\n                <Row className=\"mx-5 mb-5 border-dark robotoLight\">\r\n                    <h5 className=\"headerSummary mt-5\">Summary:</h5>\r\n                    <div className=\"textArea col-11\">\r\n                    <p className=\"my-1\">You have accumulation period of <b>{accPeriod} years</b> to save up for retirement.</p>\r\n                    <p className=\"my-1\">Over the past {accPeriod} years, from {startInfYear} to {endInfYear} cumulative inflation\r\n                        was <b>{cumInflation.toFixed(2)}%</b> with <b>{annualInflation.toFixed(2)}%</b> annual inflation.</p>\r\n                        <p className=\"my-1\">Projection above was made at annual growth rate of <b>{(realReturns*100).toFixed(2)}%</b> by deducting past annual inflation rate from expected returns of <b>{retireForm.expReturns}%</b> .</p>\r\n                    <p className=\"disclaimer mb-2\">(Past inflation are for projection purpose only and may not accurately indicate future\r\n                        inflationary numbers. This is simply an attempt to provide increased accuracy for long term financial planning.)</p>\r\n                    </div>\r\n                </Row>\r\n                :\r\n                <></>\r\n            }\r\n        </Row>\r\n\r\n    )\r\n        ;\r\n}\r\n\r\nexport default RetirePlan;\r\n","import React from 'react';\r\nimport RetirePortfolio from \"./RetirePortfolio\";\r\n\r\nfunction AllPortfolio({user}) {\r\n    return (\r\n\r\n        <RetirePortfolio user={user}/>\r\n\r\n    );\r\n}\r\n\r\nexport default AllPortfolio;\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {Col, Row, Button} from \"react-bootstrap\";\r\nimport {logDOM} from \"@testing-library/react\";\r\nimport {isNumber} from \"chart.js/helpers\";\r\n\r\nfunction Efund({user}) {\r\n    const [show, setShow] = useState(false)\r\n    const[inputList, setInputList] = useState([{ \"ccBill\": 0 }])\r\n    const initialState = { curEfund: 0, liqAsset:0, curDebt:0, fixExpense:0, mthIncome:0, stopIncome:0 }\r\n    const[efundForm, setEfundForm] = useState(initialState)\r\n\r\n    function handleChange(e){\r\n        setEfundForm({...efundForm, [e.target.name] : e.target.value})\r\n    }\r\n\r\n    //handle CC\r\n    const handleCardsChange = (e, index) => {\r\n        const {name, value} = e.target;\r\n        const list = [...inputList];\r\n        list[index][name] = value;\r\n        setInputList(list);\r\n        // setInputList({...inputList, [e.target.name] : e.target.value})\r\n    }\r\n    function handleAdd() {\r\n        setInputList([...inputList, {ccBill: 0}])\r\n    }\r\n    function handleRemove(index) {\r\n        const list = [...inputList]\r\n        list.splice(index, 1)\r\n        setInputList(list)\r\n    }\r\n    function showResult(){\r\n        setShow(true)\r\n    }\r\n\r\n    useEffect(()=>{\r\n        calcEfund()\r\n    },[efundForm])\r\n\r\n    let ccBill = []\r\n    const [creditBill, setCreditBill] = useState(0)\r\n    const [liqFund, setLiqFund] = useState(0)\r\n    const [shortTermDebt, setShortTermDebt] = useState(0)\r\n    const [burnRate, setBurnRate] = useState(0) //monthly cashflow\r\n    const [cashBudget, setCashBudget] = useState(0)\r\n    const [budget, setBudget] = useState(0)\r\n\r\n    function calcEfund(){\r\n        for(let i =0; i<inputList.length; i++){\r\n            if(inputList[i]){\r\n                ccBill.push(Number(inputList[i].ccBill))\r\n            }\r\n            setCreditBill(ccBill.reduce((a, b) => a + b))\r\n        }\r\n        setLiqFund(Number(efundForm.curEfund) + Number(efundForm.liqAsset))\r\n        setShortTermDebt(Number(efundForm.curDebt) + creditBill)\r\n        setBurnRate(Number(efundForm.mthIncome) - Number(efundForm.fixExpense))\r\n        setCashBudget((Number(efundForm.curEfund) - Number(shortTermDebt))/ efundForm.stopIncome + burnRate)\r\n        setBudget((liqFund - shortTermDebt)/ efundForm.stopIncome + burnRate)\r\n    }\r\n\r\n    return (\r\n        <Row className=\"vh-100\">\r\n            <Col className=\"col-12 mt-3 text-center eFundtitleStyle \"> Emergency Fund Calculator </Col>\r\n\r\n            <Col>\r\n                <Row>\r\n                    <Col className=\"inputDesc col-md-4 text-end mt-1\">Current Emergency Fund:</Col>\r\n                        <input className=\"inputText col-6 col-md-6 mb-3 \"  name=\"curEfund\" type=\"number\" placeholder=\"Enter current cash holdings\" min=\"0\" onChange={handleChange} />\r\n                    <Col className=\"inputDesc col-md-4 text-end mt-1\">Liquid Assets:</Col>\r\n                        <input className=\"inputText col-6 col-md-6 mb-3 \"  name=\"liqAsset\" type=\"number\" placeholder=\"Eg. Fixed deposit, shares, gold...\" min=\"0\" onChange={handleChange} />\r\n                    <Col className=\"inputDesc col-md-4 text-end mt-1\">Current Debt:</Col>\r\n                        <input className=\"inputText col-6 col-md-6 mb-3 \"  name=\"curDebt\" type=\"number\" placeholder=\"Enter short term debt (one off payment)\" min=\"0\" onChange={handleChange} />\r\n                    {inputList.map((ele, idx) => {\r\n                        return(\r\n                            <>\r\n                    <Col className=\"inputDesc col-md-4 text-end mt-1\">Outstanding Credit Card Bills:</Col>\r\n                        <input className=\"inputText col-6 col-md-3 mb-3 \"  name=\"ccBill\" value={ele.ccBill} type=\"number\" placeholder=\"Enter outstanding credit card bills\" min=\"0\" onChange={e => handleCardsChange(e, idx)}/>\r\n                            {inputList.length-1 === idx &&\r\n                            <button className=\"col-md-1\" id=\"addButton\" onClick={handleAdd}>Add</button>}\r\n                            {inputList.length !==1 &&\r\n                            <button className=\"col-md-2\" id=\"removeButton\" onClick={() => handleRemove(idx)}>Remove</button>}\r\n                            </>\r\n                    )\r\n                    })}\r\n                    <Col className=\"inputDesc col-md-4 text-end mt-1\">Fixed Expenses:</Col>\r\n                        <input className=\"inputText col-6 col-md-6 mb-3\" name=\"fixExpense\" type=\"number\" placeholder=\"Eg. Mortgage installments, insurance premiums, utility bills...\" min=\"0\" onChange={handleChange} />\r\n                    <Col className=\"inputDesc col-md-4 text-end mt-1\">Supplementary income:</Col>\r\n                        <input className=\"inputText col-6 col-md-6 mb-3\" name=\"mthIncome\" type=\"number\" placeholder=\"Supplementary income during current period\" min=\"0\" onChange={handleChange} />\r\n                    <Col className=\"inputDesc col-md-4 text-end mt-1\">Expected stoppage of income:</Col>\r\n                        <input className=\"inputText col-6 col-md-6 mb-3\" name=\"stopIncome\" type=\"number\" placeholder=\"Enter number of months\" min=\"0\" onChange={handleChange} />\r\n                    <Col md={4}></Col>\r\n                    <Button className=\"col-6 col-md-6 buttonColor \" onClick={showResult} onClickCapture={calcEfund}>Get Results</Button>\r\n                </Row>\r\n            </Col>\r\n            {show ?\r\n                <Col className=\"col-md-4 d-flex align-items-center\">\r\n                    <Row className=\"d-flex justify-content-center\">\r\n                        <Col className=\"resultHeader text-center mb-4 col-md-12\">Your Emergency Fund</Col>\r\n                        <Col className=\"efundResultHead mb-3 col-md-12\">Without liquidating any assets, </Col>\r\n                        <Col className=\"resultSubheader text-center col-md-12\">you have a budget of <b>${cashBudget.toFixed(2)}/month</b> over the period of <b>{efundForm.stopIncome}</b> months.</Col>\r\n                        <Col className=\"efundResultHead mb-3 col-md-12  mt-5\">With full liquidity, </Col>\r\n                        <Col className=\"resultSubheader text-center col-md-12\">you have access to a budget of <b>${budget.toFixed(2)}/month</b> over the period of {efundForm.stopIncome} months.</Col>\r\n                            {user ?\r\n                                <Button className=\"mt-3 w-50 mb-5 buttonColor mt-3\"  >Save Emergency Fund</Button>\r\n                                :\r\n                                <></>\r\n                            }\r\n                    </Row>\r\n                </Col>\r\n                :\r\n                <></>\r\n            }\r\n            <Col className=\"col-12\" id=\"efundIntro\" >\r\n                <Col className=\"col-12\" >Emergency fund is the concept of  \"saving for rainy days\".</Col>\r\n                <Col className=\"col-12\" >Ideal range of cash savings should be up to 6 months of one's monthly income to take a conservative approach.</Col>\r\n                <Col className=\"col-12\" >One should consider keeping as little as 3 months of expenses in emergency cash for efficient portfolio allocation and maximise growth of personal portfolio.</Col>\r\n            </Col>\r\n        </Row>\r\n    );\r\n}\r\n\r\nexport default Efund;\r\n// {inputList.map((ele, idx) => {\r\n//     return(\r\n//         <Row className=\"my-2 col-md-7\" >\r\n//             <input className=\"col-md-5\" name=\"ccBill\" value={ele.ccBill.toFixed(2)} type=\"number\" onChange={e => handleChange(e, idx)}/>\r\n//             {inputList.length-1 === idx &&\r\n//             <button className=\"col-md-2\" id=\"addButton\" onClick={handleAdd}>Add</button>}\r\n//             {inputList.length !==1 &&\r\n//             <button className=\"col-md-3\" id=\"removeButton\"  onClick={() => handleRemove(idx)}>Remove</button>}\r\n//         </Row>\r\n//\r\n//\r\n//     )\r\n// })}\r\n","import './App.css';\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport Navigation from \"./components/general/Navigation\";\nimport Home from \"./components/general/Home\";\nimport RetirementPlanner from \"./components/calculators/RetirementPlanner\";\nimport AuthForm from \"./components/auth/AuthForm\";\nimport axios from \"axios\";\nimport {Container} from \"react-bootstrap\";\nimport Port from \"./components/general/Port\";\nimport Portfolio from \"./components/general/Portfolio\";\nimport RetirePlan from \"./components/calculators/RetirePlan\";\nimport RetirePortfolio from \"./components/general/RetirePortfolio\"\nimport AllPortfolio from \"./components/general/AllPortfolio\";\nimport Efund from \"./components/calculators/Efund\"\n\nfunction App() {\n    const [auth, setAuth] = useState({})\n    const [user, setUser] = useState({})\n    // const [admin, setAdmin] = useState({})\n\n    // useEffect(() =>{\n    //     async function setAdminStatus () {\n    //         try{\n    //             let axios;\n    //             let {data} = await axios.get(\"/api/auth/user\", {\n    //                 headers: {\n    //                     authorization: `Bearer ${localStorage.token}`\n    //                 }\n    //             })\n    //             setAdmin(data.user.isAdmin)\n    //         }catch(e){\n    //             setAdmin(false)\n    //         }\n    //     }\n    //     setAdminStatus()\n    // },[]);\n    useEffect(() => {\n        async function setUserStatus() {\n            try {\n                console.log(\"line 37\")\n                let {data} = await axios.get(\"/api/auth/user\", {\n                    headers: {\n                        authorization: `Bearer ${localStorage.token}`\n                    }\n                })\n                await setAuth(true)//await\n                await setUser(data.user)//await\n            } catch (e) {\n                console.log(\"line 47\")\n                setAuth(false)\n                setUser(null)\n                localStorage.removeItem(\"token\")\n            }\n        }\n        setUserStatus()\n    }, [auth])\n\n  return (\n      <BrowserRouter>\n          <Container className=\"\">\n              <Navigation setAuth={setAuth} setUser={setUser} user={user}/>\n                <Switch>\n                    <Route path=\"/\" exact>\n                        <Home />\n                    </Route>\n                    <Route path='/efund' exact>\n                        <Efund user={user}/>\n                    </Route>\n\n                    <Route path='/retire' exact>\n                        <RetirePlan user={user}/>\n                    </Route>\n                    {/*<Route path='/golden' exact>*/}\n                    {/*    <RetirementPlanner user={user}/>*/}\n                    {/*</Route>*/}\n\n                    <Route path='/portfolio' exact>\n                        {/*<RetirePortfolio user={user}/>*/}\n                        <AllPortfolio user={user}/>\n                    </Route>\n                    {/*<Route path='/portfolioo' exact>*/}\n                    {/*    /!*<Portfolio user={user} auth={auth} />*!/*/}\n                    {/*    <Port user={user}/>*/}\n                    {/*</Route>*/}\n\n                    <Route path='/auth' exact>\n                        <AuthForm auth={auth} setAuth={setAuth}/>\n                    </Route>\n                </Switch>\n          </Container>\n\n      </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}